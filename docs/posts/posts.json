[
  {
    "path": "posts/2022-03-13-binary-logistic-regression/",
    "title": "Binary Logistic Regression",
    "description": "This post demonstrates how to use binay logistic regression to categorize two palmetto species in Florida. General analysis process includes data exploration, model build up and model selection.",
    "author": [
      {
        "name": "Yutian Fang",
        "url": {}
      }
    ],
    "date": "2022-03-13",
    "categories": [],
    "contents": "\n\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(broom)\nlibrary(caret)\nlibrary(AICcmodavg)\nlibrary(patchwork)\nlibrary(kableExtra)\n\n\n\nOverview of the data:\nData Description: The data in this task comes from the survival,growth and biomass estimates of two dominant palmetto species in Florida. The surveying year is from 1981 - 2017. The variables focused on this task include palmetto species (“plant”), palmetto height (“height”), palmetto canopy length(“length”), palmetto canopy width(“width”), and counts of green leaves (green_lvs).\nTask Objective: This task focuses on using quantitative variables (height, length, width, counts of green leaves) to predict the species of Palmetto (either “Serenoa repens” or “Sabal etonia”). Two binary logistic regression models will be built, with the better one selected from AIC and cross-validation result.\nAnalysis Process: First, the original dataset is cleaned and 3 plots are made to explore which variable might be the best variable that differentiate the two species. Next, two binary logistic regression models are built to predict palmetto species, and then use AIC and cross-validation to select the better one among the two. Finally, the classification results are examined by using the selected model to predict palmetto species from original dataset, and the % of correctly classified for each species is calculated.\nData Citation: Abrahamson, W.G. 2019. Survival, growth and biomass estimates of two dominant palmetto species of south-central Florida from 1981 - 2017, ongoing at 5-year intervals ver 1. Environmental Data Initiative. https://doi.org/10.6073/pasta/f2f96ec76fbbd4b9db431c79a770c4d5 (Accessed 2022-02-03).\nRead in data\n\n\npalmetto <-read_csv(here('data','palmetto.csv'),\n                    show_col_types = FALSE)\n\n\n\nPre-process data - make it clean\n\n\n# Select columns that will be used in the study\npalmetto_df <- palmetto %>%\n  select(-year,-plant,-site,-habitat,-treatment,-survival,-scape,-new_lvs,-biomass,-canopy,-lf_long,-comments) %>%\n  mutate(species = as.factor(species)) %>%\n  drop_na()\n\n# Change plant species from \"1\" and \"2\" to species name\npalmetto_df$species <- recode_factor(palmetto_df$species, \"1\" = \"Serenoa repens\", \"2\" = \"Sabal etonia\")\n\n\n\nCreate 3 graphs to explore which variable more likely to help classify species\n\n\np1 <- ggplot(data = palmetto_df, aes(x = height, y = length)) +\n  geom_point(aes(color = species)) +\n  labs(x = \"height (cm)\", y = \"length (cm)\")\n\np2 <- ggplot(data = palmetto_df, aes(x = height, y = width)) +\n  geom_point(aes(color = species)) +\n  labs(x = \"height (cm)\", y = \"width (cm)\")\n\np3 <- ggplot(data = palmetto_df, aes(x = height, y = green_lvs)) +\n  geom_point(aes(color = species)) +\n  labs(x = \"height (cm)\", y = \"count of green leaves\")\n\np1/p2/p3\n\n\n\n\nFigure 1: This compound figure is composed by three sub-figures: the first one shows the relationship between height and canopy length, the second one shows between height and canopy width, and the third one between height and counts of green leaves. The color of the points represent different plant species. According to the compound figure, counts of green leaves seem to do the best job of classifying two species, as can be seen, the two color points are most seperated in the third sub-figure.\n\n\n\nBuild up binary logistic regression model\nModel1: Use height, width, length and counts of green leaves to predict palmetto species\n\n\nf1 <- species~height + width + length + green_lvs\n\npal_df_blr1 <- glm(formula = f1,\n                   data = palmetto_df,\n                   family = 'binomial')\n\n\n\nModel2: Use height, width and counts of green leaves to predict palmetto species\n\n\nf2 <- species~height + width + green_lvs\n\npal_df_blr2 <- glm(formula = f2,\n                   data = palmetto_df,\n                   family = 'binomial')\n\n\n\nModel selection based on AIC and cross-validation\nUse caret package to automate cross validation(10-fold validation, repeated 10 times)\n\n\nset.seed(123)\n\ntr_ctrl <- trainControl(method = 'repeatedcv', number = 10, repeats = 10)\n\n### train the model\n\nmodel1 <- train(f1, data = palmetto_df,\n                method = 'glm', family = 'binomial',\n                trControl = tr_ctrl)\n\nmodel1\n\n\nGeneralized Linear Model \n\n12267 samples\n    4 predictor\n    2 classes: 'Serenoa repens', 'Sabal etonia' \n\nNo pre-processing\nResampling: Cross-Validated (10 fold, repeated 10 times) \nSummary of sample sizes: 11040, 11040, 11040, 11041, 11040, 11041, ... \nResampling results:\n\n  Accuracy   Kappa    \n  0.9169231  0.8338335\n\nmodel2 <- train(f2, data = palmetto_df,\n                method = 'glm', family = 'binomial',\n                trControl = tr_ctrl)\n\nmodel2\n\n\nGeneralized Linear Model \n\n12267 samples\n    3 predictor\n    2 classes: 'Serenoa repens', 'Sabal etonia' \n\nNo pre-processing\nResampling: Cross-Validated (10 fold, repeated 10 times) \nSummary of sample sizes: 11039, 11041, 11040, 11041, 11041, 11039, ... \nResampling results:\n\n  Accuracy   Kappa    \n  0.8988022  0.7975858\n\nAccording to the accuracy result, the first model performs better than the second one with higher accuracy (0.9169>0.8988)\nUse AICcmodavg::aictab to compare the model results\n\n\nAICcmodavg::aictab(list(pal_df_blr1, pal_df_blr2))\n\n\n\nModel selection based on AICc:\n\n     K    AICc Delta_AICc AICcWt Cum.Wt       LL\nMod1 5 5194.57       0.00      1      1 -2592.28\nMod2 4 5987.48     792.91      0      1 -2989.74\n\nAccording to the AIC result, the first model performs better than the second one with lower AIC value (5194.57 < 5987.48)\nTherefore, I select model 1 to train the entire dataset.\nFormatted Model 1 table\n\n\nblr1_tidy <- broom::tidy(pal_df_blr1)\n\nblr1_tidy %>%\n  mutate(p_value = ifelse(p.value <0.001, \"<0.001\", \"0\")) %>%\n  select(-p.value) %>%\n  kbl(caption = \"Table1: Binary Logistic Regression Result for Model1\",\n      col.names = c( 'Variable_Name',\n                     'Coefficient_Estimates',\n                     'Standard_Error',\n                     'Statistics',\n                     'P_Value'),\n      digits = c(0,5,5,5,0)) %>%\n  kable_classic(full_width = F, html_font = \"Cambria\",position = \"center\")\n\n\n\nTable 1: Table1: Binary Logistic Regression Result for Model1\n\n\nVariable_Name\n\n\nCoefficient_Estimates\n\n\nStandard_Error\n\n\nStatistics\n\n\nP_Value\n\n\n(Intercept)\n\n\n3.22669\n\n\n0.14207\n\n\n22.71180\n\n\n<0.001\n\n\nheight\n\n\n-0.02922\n\n\n0.00231\n\n\n-12.66984\n\n\n<0.001\n\n\nwidth\n\n\n0.03944\n\n\n0.00210\n\n\n18.78227\n\n\n<0.001\n\n\nlength\n\n\n0.04582\n\n\n0.00187\n\n\n24.55600\n\n\n<0.001\n\n\ngreen_lvs\n\n\n-1.90847\n\n\n0.03886\n\n\n-49.10728\n\n\n<0.001\n\n\nOriginal data classification based on model1\nCreate species prediction based on model1, examine whether the prediction is accurate\n\n\nblr1_fitted <- pal_df_blr1 %>%\n  broom::augment(type.predict = 'response') %>%\n  select(-.resid, -.std.resid, -.hat, -.sigma, -.cooksd) %>%\n  mutate(species_predicted = ifelse(.fitted >= 0.5, \"Sabal etonia\", \"Serenoa repens\" )) %>%\n  mutate(correct_classified = ifelse(species == species_predicted, \"TRUE\", \"FALSE\"))\n\n\n\nCreate final table, and format the final table\n\n\n# Create final table\nfinal_table <- blr1_fitted %>%\n  select(-height,-width,-length,-green_lvs,-.fitted,-species_predicted) %>%\n  group_by(species) %>%\n  count(correct_classified) %>%\n  rename(number_counts = n) %>%\n  mutate(total_counts = sum(number_counts)) %>%\n  mutate(percentage_classified = (number_counts/total_counts)*100) %>%\n  select(-total_counts)\n\n# Format final table\nfinal_table %>%\n    kbl(caption = \"Table2: Final Classified Table\",\n      col.names = c( 'Species',\n                     'Classified_Correctly?',\n                     'Counts_of_Classification',\n                     'Classified_Percentage(%)'),\n      digits = c(0,0,0,3)) %>%\n  kable_classic(full_width = F, html_font = \"Cambria\",position = \"center\")\n\n\n\nTable 2: Table2: Final Classified Table\n\n\nSpecies\n\n\nClassified_Correctly?\n\n\nCounts_of_Classification\n\n\nClassified_Percentage(%)\n\n\nSerenoa repens\n\n\nFALSE\n\n\n564\n\n\n9.228\n\n\nSerenoa repens\n\n\nTRUE\n\n\n5548\n\n\n90.772\n\n\nSabal etonia\n\n\nFALSE\n\n\n454\n\n\n7.376\n\n\nSabal etonia\n\n\nTRUE\n\n\n5701\n\n\n92.624\n\n\nAccording to the Table 2 result above, model 1 does a good job in predicting Palmetto species based on height, canopy length and width, and also counts of green leaves with percentage of correctly classified above 90% for both of species. Among the two species, model 1 has higher prediction accuracy for Sabal etonia compared to Serenoa repens (92.62% > 90.77%).\n\n\n\n",
    "preview": "posts/2022-03-13-binary-logistic-regression/binary-logistic-regression_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-03-13T16:27:05-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-13-non-linear-least-square-nls/",
    "title": "Non-Linear Least Square (NLS)",
    "description": "This post demonstrates how to fit non-linear least square (NLS) to predict lizard weight based on snout-length using lizards sampled by pitfall trap at Jornada basin LTER from 1989 - 2006.",
    "author": [
      {
        "name": "Yutian Fang",
        "url": {}
      }
    ],
    "date": "2022-03-13",
    "categories": [],
    "contents": "\n\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(broom)\nlibrary(kableExtra)\n\n\n\nOverview of the data:\nData Description: The data in this task comes from lizards sampled by pitfall trap located at 11 consumer plots at Jornada Basin LTER site from 1989 - 2006. Variables focused in this study include lizard species, sex, weight and snout-to-vent length (cm).\nTask Objective: This task uses non-linear least square (NLS) model to predict lizard weight based on snout-to-vent length from the equation: W = a*(SVL)^b. The NLS model is first fitted to all lizard species in the dataset, and then fitted only to male Western wiptail lizard to compare RMSE between two models.\nAnalysis Process: The weight/SVL variables are first being log-transformed to fit a standard OLS regression in order to get a first guess of parameters a and b, then NLS model is built based on the final guess.This process is repeated for all species and selected species.Both models are used to train the entire dataset to get the predicted weight result, in order to calculate RMSE and compare with the species specific model\nData Citation: Lightfoot, D. and W.G. Whitford. 2020. Lizard pitfall trap data from 11 NPP study locations at the Jornada Basin LTER site, 1989-2006 ver 37. Environmental Data Initiative. https://doi.org/10.6073/pasta/4a6e258fb49c31e222ecbbcfd128967f\nRead in the data\n\n\nlizards <- read_csv(here('data','lizard.csv'),\n                    show_col_types = FALSE)\n\n\n\nFit NLS model to all lizard species\nGet first guess of parameters a and b\n\n\n# Establish the fromula that describe the relationship between weight and SVL\nlength_to_weight <- function(a,SV_length,b) {\n  out = a*(SV_length)^b\n  \n  return(out)\n}\n\n# Log-transform weight and SVL\nlizards <- lizards %>%\n  mutate(log_length = log(SV_length)) %>%\n  mutate(log_weight = log(weight))\n\n# Build up OLS regression to get first guess of parameters a and b\n\nmy_guess_model <- lm(log_weight~log_length, data = lizards)\n\n# according to coefficients above, b = 2.53712, a = e^-8.47545\n# store the guess of a and b as guess_vec\n\nguess_vec=c(exp(my_guess_model$coefficients[1]), my_guess_model$coefficients[2])\n\n\n\nBuild up NLS model for all lizard species based on the first guess of a and b above\n\n\nlizards_nls = nls(weight~length_to_weight(a,SV_length,b),\n                  data = lizards,\n                  start = list(a = guess_vec[1], b = guess_vec[2]))\n\n# Put model output in `kable` format\nlizards_nls_tidy <- broom::tidy(lizards_nls)\n\nlizards_nls_tidy %>%\n  kbl(caption = \"non-linear least square model for all lizard species and sex \",\n      col.names = c( 'Parameters',\n                     'Coefficient_Estimates',\n                     'Standard_Error',\n                     'Statistics',\n                     'P_Value'),\n      digits =c(0,5,5,5,5) ) %>%\n  kable_classic(full_width = F, html_font = \"Cambria\",position = \"center\")\n\n\n\nTable 1: non-linear least square model for all lizard species and sex\n\n\nParameters\n\n\nCoefficient_Estimates\n\n\nStandard_Error\n\n\nStatistics\n\n\nP_Value\n\n\na\n\n\n0.00034\n\n\n0.00004\n\n\n8.53842\n\n\n0\n\n\nb\n\n\n2.45321\n\n\n0.02698\n\n\n90.93001\n\n\n0\n\n\nMake a graph of fitted model for all lizard species\n\n\n# Make prediction from NLS model\nlizards <- lizards%>%\n  mutate(prediction = predict(lizards_nls,newdata = lizards))\n\n# Make graph based on prediction\nggplot() +\n  geom_point(data = lizards,aes(x = SV_length, y = weight, color = sex)) +\n  geom_line (data = lizards,aes(x = SV_length, y = prediction)) +\n  labs(x = \"Snout to Vent Length\", y = \"Weight\")\n\n\n\n\nFigure 1: This figure demonstrates the result of the fitted model lay above the points from original dataset, with color differentiate the sex of lizards. The black line represents the result of fitted model, with the weight predicted from the nls model above (with SV length from original dataset). The points represent the SV length and weight measured from the real world.\n\n\n\nFit NLS model only to male Western whiptail lizard\nGet first guess of parameters a and b\n\n\n# Filter original dataset only to male Western whiptail lizard \nlizards_CNTI <- lizards %>%\n  filter(sex == \"M\", spp == \"CNTI\") %>%\n  select(-prediction)\n\n# Establish OLS regression model to get parameter a and b\nmy_guess_model_CNTI <- lm(log_weight~log_length, data = lizards_CNTI)\n\n# store parameter a and b in the guess_vec_CNTI\nguess_vec_CNTI <- c(exp(my_guess_model_CNTI$coefficients[1]), my_guess_model_CNTI$coefficients[2])\n\n\n\nBuild up NLS model for male Western whiptail lizard based on the first guess of a and b above\n\n\nlizards_nls_CNTI = nls(weight~length_to_weight(a,SV_length,b),\n                       data = lizards_CNTI,\n                       start = list(a = guess_vec_CNTI[1], b = guess_vec_CNTI[2]))\n\n# Make prediction on the weight of Male CNTI lizard by using both general species NLS and species specific NLS\n\nlizards_CNTI <- lizards_CNTI %>%\n  mutate(prediction_spp_nls = predict(lizards_nls_CNTI,newdata = lizards_CNTI)) %>%\n  mutate(prediction_general_nls = predict(lizards_nls,newdata = lizards_CNTI))\n\n\n\nCalculate RMSE for both fitted model\n\n\n# Establish the function of RMSE\ncalc_rmse <- function (x,y) {\n  rmse_result <- (x - y)^2 %>% mean() %>% sqrt()\n  return(rmse_result)\n}\n\n# calculate RMSE for general NLS and species specific NLS\nrmse_spp_nls = calc_rmse(lizards_CNTI$weight, lizards_CNTI$prediction_spp_nls)\n\nrmse_general_nls = calc_rmse(lizards_CNTI$weight, lizards_CNTI$prediction_general_nls)\n\nrmse_result <- c(rmse_general_nls, rmse_spp_nls)\n\nrmse_result\n\n\n[1] 3.562172 3.349286\n\nMake a graph for both models on Western whiptail lizard data\n\n\nggplot() +\n  geom_line (data = lizards_CNTI,aes(x = SV_length, y = prediction_general_nls),color = \"blue\") +\n  geom_line (data = lizards_CNTI, aes(x = SV_length, y = prediction_spp_nls), color = \"red\") +\n  geom_point(data = lizards_CNTI, aes(x = SV_length, y = weight), color = \"purple\") +\n  labs(x = \"Snout to Vent Length\", y = \"Weight\")\n\n\n\n\nFigure 2: This figure demonstrates the result of the fitted model from both NLS general and NLS species specific models. The red line represents the fitted model from NLS species specific model, and the blue line represents the fitted model from NLS general model. The purple dots represent the original data for Western whiptail lizard. From the graph, it can be seen that the two fitted models are closed enough, but from RMSE result above, it shows NLS species specific model performs better than NLS general model on species specific data with lower RMSE (general RMSE 3.56 > species specific RMSE 3.35). therefore, we should establish NLS model for each subsets we want to look at rather than use the general model to predict all.\n\n\n\n\n\n\n",
    "preview": "posts/2022-03-13-non-linear-least-square-nls/non-linear-least-square-nls_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2022-03-13T16:38:38-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-13-time-series-analysis/",
    "title": "Time Series Analysis",
    "description": "This post demonstrates time series analysis for fish passage time at Willamette Falls from 2001 - 2010.",
    "author": [
      {
        "name": "Yutian Fang",
        "url": {}
      }
    ],
    "date": "2022-03-13",
    "categories": [],
    "contents": "\n\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\nlibrary(tidyverse)\nlibrary(here)\nlibrary(lubridate)\nlibrary(tsibble)\nlibrary(feasts)\n\n\n\nData Summary\nData Description: This time series dataset describes fish passage time for multiple species through fish ladder on Willamette Fall from year 2001-2010.\nAnalysis Process:This task is composed by three parts focusing on the passage time of three fish species: coho, jack coho and steelhead. In the first part we explore the original time series plot for each species, with the second part describes seasonal patterns and the third part describes annual patterns for each species.\nData Citation: Columbia River DART, Columbia Basin Research, University of Washington.(2022). Adult Passage Graphics & Text. Available from http://www.cbr.washington.edu/dart/query/adult_graph_text\n\n\n# Read in data and replace NA with 0\npassage <- read_csv(here('data/willamette_fish_passage.csv')) %>%\n   mutate(across(everything(), ~ ifelse(is.na(.), 0, .)))\n\n# Turn passage into time series data\npassage_ts <- passage %>%\n  mutate(Date = lubridate::mdy(Date)) %>%\n  as_tsibble(key = NULL, index = Date) %>%\n  janitor::clean_names() %>%\n  select(date, coho, jack_coho, steelhead)\n\n#Transform the format of passage_ts\npassage_ts_clean <- passage_ts %>%\n  pivot_longer(cols = c(coho, jack_coho, steelhead)) %>%\n  rename(species = name)\n\n\n\nOriginal time series\n\n\nggplot(data = passage_ts_clean, aes(x = date, y = value)) +\n  geom_line(aes(color = species)) +\n  scale_color_manual(values = c(\"red\",\"blue\",\"green\")) +\n  labs(x = 'Date',\n       y = 'Counts by Species' ) +\n  theme_classic()\n\n\n\n\nFigure 1: This line figure shows the original time series for coho, jack coho and steelhead, demonstrated in red, blue and green lines. The x-axis represents date (on day), and y-axis represents counts of each species on that date.\n\n\n\nObserved Trend\nObvious seasonal patterns of passage time demonstrated across all three species (with peak, demonstrates high counts of species in certain time period)\nSimilar passage time for coho and jack coho (their peaks tend to overlap with each other), while steelhead has a different seasonal pattern for passage time compared with them (the peak of steelhead does not overlap with coho and jack coho)\nJack coho has generally lower counts overall compared with other two species\nSeasonplots\n\n\n#create monthly dataset\npassage_ts_month <- passage_ts_clean %>%\n  index_by(yr_mo = ~yearmonth(.)) %>%\n  group_by(species) %>%\n  summarize(monthly_species = sum(value))\n\n#Make seasonal plot\ngg_season(data = passage_ts_month, y = monthly_species) +\n  labs(x = 'Month', y = 'Counts for Species') +\n  theme_classic()\n\n\n\n\nFigure 2: This figure is composed by three panels, with each panel represents the seasonal plot of each species. The x-axis represents month in each year, and y-axis represents the summarized counts of species in that month. The lines are colored based on survey year.\n\n\n\nObserved Trend\nPassage time for coho and jack coho are in Fall (from Aug - Oct), while the passage time for steelhead are in Spring and early summer (from Mar - Jul)\nThe number of coho suddenly increases in year 2009 and 2010 (higher peak in those two years than previous)\nAnnual counts by species\n\n\n# Create annual dataset\npassage_ts_annual <- passage_ts_clean %>%\n  index_by(yr = ~year(.)) %>%\n  group_by(species) %>%\n  summarize(annual_species = sum(value))\n\n# Create line graph\nggplot(data = passage_ts_annual, aes(x = yr, y = annual_species)) +\n  geom_line(aes(color = species)) +\n  scale_x_continuous(breaks = c(2001:2010)) +\n  scale_color_manual(values = c(\"red\",\"blue\",\"green\")) +\n  labs(x = 'Year',\n       y = 'Counts by Species' ) +\n  theme_classic()\n\n\n\n\nFigure 3: This line figure demonstrates how the total annual counts of three fish species change with survey year. Red line represents coho, blue line represents jack coho, and green line represents steelhead. x-axis represents survey year, and y-axis represents total annual counts by species.\n\n\n\nObserved Trend\nJack coho has the lowest annual counts overall than other two species\nSteelhead has the highest annual counts overall than other two species\nThe sudden increase in coho annual counts start in 2008\n\n\n\n",
    "preview": "posts/2022-03-13-time-series-analysis/time-series-analysis_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2022-03-13T16:52:14-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-01-19-welcome/",
    "title": "Welcome!",
    "description": "Welcome to this data science blog! In this blog, I will share some mini data science projects I did in R both from course or research which will updates at irregular schedules. I will include result and R code in each post. Click and check out each of them if you feel interested! Enjoy!",
    "author": [
      {
        "name": "Yutian Fang",
        "url": {}
      }
    ],
    "date": "2022-01-19",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2022-03-13T15:58:20-07:00",
    "input_file": {}
  }
]
